import numpy as np

weights=np.load("model.npz")

for k,v in weights.items():
    print("%s:\t%s"%(k,v.shape))

'''
layer4_1.bn2.running_mean:	(512,)
layer0.bn1.running_var:	(64,)
layer3_1.bn1.num_batches_tracked:	()
layer3_1.conv1.weight:	(256, 256, 3, 3)
layer2_1.bn1.running_mean:	(128,)
layer3_0.downsample.1.bias:	(256,)
layer1_0.bn2.num_batches_tracked:	()
layer0.bn1.bias:	(64,)
layer2_0.conv1.bias:	(128,)
layer5.bn1.weight:	(10,)
layer1_1.conv1.weight:	(64, 64, 3, 3)
layer1_0.bn1.weight:	(64,)
layer4_0.downsample.1.bias:	(512,)
layer4_0.conv2.weight:	(512, 512, 3, 3)
layer2_0.downsample.1.running_mean:	(128,)
layer1_0.bn1.num_batches_tracked:	()
layer4_0.bn2.weight:	(512,)
layer3_0.conv2.bias:	(256,)
layer2_1.conv2.bias:	(128,)
layer1_1.conv1.bias:	(64,)
layer4_0.conv1.weight:	(512, 256, 3, 3)
layer3_1.bn1.running_mean:	(256,)
layer2_0.bn2.running_var:	(128,)
layer1_1.bn2.running_mean:	(64,)
layer5.conv1.bias:	(10,)
layer2_0.downsample.0.weight:	(128, 64, 1, 1)
layer4_1.bn2.weight:	(512,)
layer4_1.bn1.num_batches_tracked:	()
layer2_0.bn2.running_mean:	(128,)
layer3_1.conv2.weight:	(256, 256, 3, 3)
layer1_0.bn2.weight:	(64,)
layer5.bn1.running_var:	(10,)
layer1_0.bn2.running_var:	(64,)
layer3_0.bn1.running_mean:	(256,)
layer1_1.bn2.num_batches_tracked:	()
layer2_0.bn1.bias:	(128,)
layer3_0.downsample.0.weight:	(256, 128, 1, 1)
layer5.bn1.bias:	(10,)
layer4_1.bn2.num_batches_tracked:	()
layer3_1.conv2.bias:	(256,)
layer4_0.bn2.bias:	(512,)
layer5.conv1.weight:	(10, 512, 1, 1)
layer3_1.bn1.weight:	(256,)
layer3_0.bn2.running_var:	(256,)
layer3_0.bn2.bias:	(256,)
layer4_1.conv1.bias:	(512,)
layer4_0.bn1.weight:	(512,)
layer1_1.bn2.running_var:	(64,)
layer0.bn1.num_batches_tracked:	()
layer4_1.bn1.running_mean:	(512,)
layer0.bn1.weight:	(64,)
layer4_1.bn1.weight:	(512,)
layer3_0.conv2.weight:	(256, 256, 3, 3)
layer4_0.bn1.running_mean:	(512,)
layer4_0.bn2.running_var:	(512,)
layer3_1.bn2.running_var:	(256,)
layer3_0.bn1.weight:	(256,)
layer2_1.bn2.bias:	(128,)
layer1_1.bn1.running_var:	(64,)
layer4_0.bn1.bias:	(512,)
layer1_0.bn1.bias:	(64,)
layer2_1.bn1.running_var:	(128,)
layer4_0.downsample.1.running_var:	(512,)
layer2_1.conv1.bias:	(128,)
layer2_0.downsample.1.running_var:	(128,)
layer1_1.bn1.weight:	(64,)
layer4_1.bn2.running_var:	(512,)
layer2_0.downsample.1.bias:	(128,)
layer2_0.bn2.weight:	(128,)
layer0.bn1.running_mean:	(64,)
layer2_0.bn1.running_var:	(128,)
layer3_1.bn2.bias:	(256,)
layer4_1.bn1.bias:	(512,)
layer1_1.bn1.bias:	(64,)
layer1_1.conv2.bias:	(64,)
layer3_0.bn2.num_batches_tracked:	()
layer3_0.downsample.1.running_mean:	(256,)
layer1_0.bn2.bias:	(64,)
layer4_0.conv2.bias:	(512,)
layer3_0.bn1.bias:	(256,)
layer3_0.conv1.weight:	(256, 128, 3, 3)
layer4_0.downsample.0.weight:	(512, 256, 1, 1)
layer2_1.bn2.weight:	(128,)
layer4_0.downsample.0.bias:	(512,)
layer2_1.bn1.weight:	(128,)
layer2_1.conv1.weight:	(128, 128, 3, 3)
layer3_0.downsample.1.running_var:	(256,)
layer4_1.conv2.weight:	(512, 512, 3, 3)
layer3_0.bn2.weight:	(256,)
layer2_1.bn1.bias:	(128,)
layer1_0.bn1.running_var:	(64,)
layer3_1.conv1.bias:	(256,)
layer4_1.conv2.bias:	(512,)
layer1_1.bn2.weight:	(64,)
layer2_1.bn2.running_mean:	(128,)
layer2_0.conv1.weight:	(128, 64, 3, 3)
layer4_1.conv1.weight:	(512, 512, 3, 3)
layer3_1.bn1.bias:	(256,)
layer1_1.bn1.running_mean:	(64,)
layer0.conv1.weight:	(64, 3, 7, 7)
layer4_0.conv1.bias:	(512,)
layer2_0.bn1.num_batches_tracked:	()
layer3_0.bn1.num_batches_tracked:	()
layer3_1.bn2.weight:	(256,)
layer1_0.conv2.weight:	(64, 64, 3, 3)
layer1_0.conv2.bias:	(64,)
layer4_0.downsample.1.num_batches_tracked:	()
layer3_0.bn1.running_var:	(256,)
layer4_0.bn1.num_batches_tracked:	()
layer2_0.downsample.0.bias:	(128,)
layer1_1.conv2.weight:	(64, 64, 3, 3)
layer2_1.bn2.running_var:	(128,)
layer3_0.bn2.running_mean:	(256,)
layer4_1.bn2.bias:	(512,)
layer3_1.bn2.running_mean:	(256,)
layer1_1.bn1.num_batches_tracked:	()
layer3_0.downsample.1.weight:	(256,)
layer1_0.conv1.bias:	(64,)
layer4_0.bn2.running_mean:	(512,)
layer2_0.downsample.1.num_batches_tracked:	()
layer5.bn1.num_batches_tracked:	()
layer0.conv1.bias:	(64,)
layer4_0.bn2.num_batches_tracked:	()
layer5.bn1.running_mean:	(10,)
layer2_0.bn1.running_mean:	(128,)
layer4_0.bn1.running_var:	(512,)
layer1_0.conv1.weight:	(64, 64, 3, 3)
layer3_1.bn1.running_var:	(256,)
layer2_0.conv2.weight:	(128, 128, 3, 3)
layer3_0.downsample.0.bias:	(256,)
layer2_0.bn2.bias:	(128,)
layer3_0.conv1.bias:	(256,)
layer1_1.bn2.bias:	(64,)
layer4_0.downsample.1.running_mean:	(512,)
layer2_1.bn2.num_batches_tracked:	()
layer3_1.bn2.num_batches_tracked:	()
layer2_1.conv2.weight:	(128, 128, 3, 3)
layer2_0.downsample.1.weight:	(128,)
layer1_0.bn2.running_mean:	(64,)
layer2_0.conv2.bias:	(128,)
layer4_1.bn1.running_var:	(512,)
layer2_1.bn1.num_batches_tracked:	()
layer4_0.downsample.1.weight:	(512,)
layer3_0.downsample.1.num_batches_tracked:	()
layer1_0.bn1.running_mean:	(64,)
layer2_0.bn2.num_batches_tracked:	()
layer2_0.bn1.weight:	(128,)
'''